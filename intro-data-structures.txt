1. A line of people at an amusement park ride.
  -The line is composed of members, represented as strings.
  -There is a front to the line, as well as a back.
  -When someone enters the line, place them at the end.
  -People may leave the line whenever they see fit, and those behind them take their place.
Given the above real-world information, use an array data structure to code the following solution.

a) Use an array input: ["Vivian", "Ava", "Josh", "Patrick", "Mike"]
  var people = ["Vivian", "Ava", "Josh", "Patrick", "Mike"];

b) Insert a new person, "Mary" at the end of the line. In other words, you should insert Mary after Mike.
  function insertPerson(people) {
    people.push("Mary");
    return people;
  }

c) Find a person in line named "Josh." This function should return the position of 2 in the array, (recall that arrays are 0-based).
  function findPerson(people) {
    for(var i = 0; i < people.length; i++) {
      if(people[i] === 'Josh') {
        return i;
      } else {
        return 'Josh is not in line.'
      }
    }
  }

d) Find a person in line named "Emily." What should your function return if it does not find the item in the array?
function findPerson(people) {
  for(var i = 0; i < people.length; i++) {
    if(people[i] === 'Emily') {
      return i;
    } else {
      return 'Emily is not in line.'
    }
  }
}

e) What if Ava wants to allow a friend, "Melissa", to cut in line in front of her? How would you code this so Melissa appears before Ava?
  function cutInLine(people) {
    people.splice(1, 0, "Melissa");
    return people;
  }

f) If Patrick wants to leave the line, how would you delete him from the array?
  function leaveLine(people) {
    people.splice(4, 1)
    return people;
  }

2. Provide another real-world example that you can model using a data structure.
  Another real-world example that you can model using a data structure is a grocery list. You can create an array:
    var groceryList = ['eggs', 'peanut butter', 'steak', 'potatoes'];

3. How would your data structure allow developers to access and manipulate the data?
  You would be able to access and manipulate the array just like we were able to do so with the line example. Using different methods/functions allows us to
  edit and manipulate as needed.
