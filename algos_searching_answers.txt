1. What is a real-life scenario that uses linear search?
An example of linear search would be looking through a grocery list to find an item to cross off the list once you've found it.

2. What is a real-life scenario that uses binary search?
An example of binary search could be looking for an entry in a phonebook. You would open to a page in the middle of the book to start looking. Then you would either open
to a page in the middle of the lower or higher part of the book in the alphabet depending on where you were trying to go. In theory you could keep doing this until you found
the right page you were looking for.

3. Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using linear search?
It would take 7 iterations to find 'G' using linear search.

4. Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using binary search?
It would take 3 iterations to find 'G' using binary search.

5. Given an unsorted collection of a million items, which algorithm would you choose between linear search and binary search? Explain your reasoning.
If I were given an unsorted collection of a million items, I would use linear search in order to find the item. This is because binary search can only
work with sorted collections. There is no way to compare items if they are not sorted already in order to do a binary search.

6. Given a sorted collection of a million items, which algorithm would you choose between linear search and binary search? Explain your reasoning.
In this scenario, I would use binary search because it would make more sense to narrow down in the collection of items where we are looking rather
than to look through each individual item, when our item could be potentially at the end of the list.

Programming Assignment:
1. You and a friend have set a wager to see who can find the word "Albatross" in the dictionary the fastest. Write a program to allow you to win the bet.
  function findWord(collection, word){
    var low = 0;
    var high = collection.length - 1;

    while(low <= high) {
      var middle = (low + high) / 2;
      if (collection.indexOf(word) < collection[middle]) {
        high = middle - 1;
      } else if (collection.indexOf(word) > collection[middle]) {
        low = middle + 1;
      } else {
        var middle = middle;
        return word;
      }
    }
  }

  var collection = ['Aardvark', 'Albatross', 'Anteater', 'Ape'];
  findWord(collection, 'Albatross');

2. You work at a pet store, and a child has asked you to net the only white-spotted goldfish from the fish tank. Write a program that will help you net the right fish.
    function findFishy(collection, fish){
      var result = null, value;
      for(var i = 0; i < collection.length; i++) {
        value = collection[i];
        if(value === fish) {
          result = i;
          break;
        }
      }
      return fish;
    }

    var collection = ['blue angler', 'yellow goldfish', 'white-spotted goldfish', 'green eel'];
    findFishy(collection, 'white-spotted goldfish');
