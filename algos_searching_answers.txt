1. What is a real-life scenario that uses linear search?
An example of linear search would be looking through a grocery list to find an item to cross off the list once you've found it.

2. What is a real-life scenario that uses binary search?
An example of binary search could be looking for an entry in a phonebook. You would open to a page in the middle of the book to start looking. Then you would either open
to a page in the middle of the lower or higher part of the book in the alphabet depending on where you were trying to go. In theory you could keep doing this until you found
the right page you were looking for.

3. Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using linear search?
It would take 7 iterations to find 'G' using linear search.

4. Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using binary search?
It would take 3 iterations to find 'G' using binary search.

5. Given an unsorted collection of a million items, which algorithm would you choose between linear search and binary search? Explain your reasoning.
If I were given an unsorted collection of a million items, I would definitely use binary search to find an item. It would be faster to use binary search because we don't know
were the item is since it's unsorted. It could potentially take a million iterations to find an item. With binary search, we are narrowing down the number of items we are
ultimately looking through.

6. Given a sorted collection of a million items, which algorithm would you choose between linear search and binary search? Explain your reasoning.
In this scenario, I think it would depend on what I am looking for in the collection of items. If the item I am looking for is sorted early in the collection, then I would
probably use linear search because I would know that we would iterate over the collection and find that item quickly. Otherwise, I would use binary search to not require us
to iterate through most of the million items.

Programming Assignment:
1. You and a friend have set a wager to see who can find the word "Albatross" in the dictionary the fastest. Write a program to allow you to win the bet.
  function findWord(collection, word){
    var result = null, value;
    for(var i = 0; i < collection.length; i++){
      value = collection[i];
      if(value === word){
        result = i;
        break;
      }
    }
    return word;
  }

2. You work at a pet store, and a child has asked you to net the only white-spotted goldfish from the fish tank. Write a program that will help you net the right fish.

    function findFishy(collection, fish){
      var low = 0;
      var high = collection.length - 1;

      while(low <= high) {
        var middle = (low + high) / 2;
        if (collection.indexOf(fish) < collection[middle]) {
          high = middle - 1;
        } else if (collection.indexOf(fish) > collection[middle]) {
          low = middle + 1;
        } else {
          return middle;
        }
      }
    }
